package com.aartek.repository;

import java.util.Iterator;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.orm.hibernate5.HibernateTemplate;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Isolation;
import org.springframework.transaction.annotation.Transactional;

import com.aartek.model.Product;
import com.aartek.model.User;


@Repository
public class ProductRepo {

	
	private static final Logger log=Logger.getLogger(ProductRepo.class);

	@Autowired
	private HibernateTemplate hbtemplate;
	
	
	@Transactional(isolation=Isolation.READ_COMMITTED)
	public String saveProduct(Product product)
	{
		
		log.debug("Product Repository :---- Save Product Method");
		
		hbtemplate.save(product);
		
		log.debug("\n Record Inserted Successfully \n");
		
		return "product";

		
	}

	@Transactional(isolation=Isolation.READ_UNCOMMITTED)
	public List getAllProduct(Product product)
	{
		
		log.debug("Product Repository :---- GET ALL Product Method");
		
		List rows=hbtemplate.loadAll(Product.class);
		
		log.debug("\n Record Fetched Successfully \n");
		
		return rows;
	}
	
	
	@Transactional(isolation=Isolation.READ_UNCOMMITTED)
	public Product getSingleProduct(Integer id)
	{
		log.debug("Registration Repository :---- GET Single User Method");
		
		List rows= hbtemplate.find("from User U where U.id = ?", id);
				
		Iterator<User> itr=rows.iterator();
		
		User user=null;
		
		while(itr.hasNext())
		{
			
			user=(User) itr.next();
		}
		
		log.debug("\n Record Fetched Successfully \n");
		
		return user;
	}

	
	@Transactional(isolation=Isolation.READ_COMMITTED)
	public User deleteSingleUser(Integer id)
	{
		
		log.debug("Registration Repository :---- Delete Single User Method");
		
		User user=getSingleUser(id); /* Getting the User*/ 
		
		hbtemplate.delete(user);

		log.debug("\n Record Delete Successfully \n");
		
		return user;
	}

	
	
}
